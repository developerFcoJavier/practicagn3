{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FetchDataComponent = class FetchDataComponent {\n  constructor(http, baseUrl, formBuilder) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.formBuilder = formBuilder;\n    this.forecasts = [];\n    this.submitted = false;\n    this.campo = '';\n    this.modalOpen = false;\n  }\n  ngOnInit() {\n    this.http.get(this.baseUrl + 'api/departamento').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n    this.form = this.formBuilder.group({\n      claveDepartamento: ['', Validators.required],\n      descripcion: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    this.http.post(this.baseUrl + 'api/departamento', this.form.value).subscribe(result => {\n      this.submitted = false;\n      this.form.reset();\n      if (confirm(result.mensaje)) {\n        window.location.reload();\n      }\n    }, error => alert(error.message));\n  }\n  onReset() {\n    this.submitted = false;\n    this.form.reset();\n  }\n  openModal() {\n    this.modalOpen = true;\n  }\n  closeModal() {\n    this.modalOpen = false;\n  }\n};\nFetchDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html',\n  styleUrls: ['../../assets/modal.css']\n}), __param(1, Inject('BASE_URL'))], FetchDataComponent);\nexport { FetchDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAe,eAAe;AAGxD,SAAkDC,UAAU,QAAQ,gBAAgB;AAO7E,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAO7BC,YAAoBC,IAAgB,EAA8BC,OAAe,EAAUC,WAAwB;IAA/F,SAAI,GAAJF,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAAkB,gBAAW,GAAXC,WAAW;IAL/F,cAAS,GAAsB,EAAE;IACxC,cAAS,GAAG,KAAK;IACjB,UAAK,GAAW,EAAE;IA2ClB,cAAS,GAAG,KAAK;EAxCsG;EAEvHC,QAAQ;IACN,IAAI,CAACH,IAAI,CAACI,GAAG,CAAoB,IAAI,CAACH,OAAO,GAAG,kBAAkB,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACrF,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAEjC,IAAI,CAACE,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAChC;MACEC,iBAAiB,EAAG,CAAC,EAAE,EAAEf,UAAU,CAACgB,QAAQ,CAAC;MAC7CC,WAAW,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACgB,QAAQ;KACtC,CACF;EACH;EACA,IAAIE,CAAC;IACH,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAC3B;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;MACrB;;IAEF,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAM,IAAI,CAACnB,OAAO,GAAG,kBAAkB,EAAE,IAAI,CAACS,IAAI,CAACW,KAAK,CAAC,CAAChB,SAAS,CAACC,MAAM,IAAG;MAEzF,IAAI,CAACY,SAAS,GAAG,KAAK;MACtB,IAAI,CAACR,IAAI,CAACY,KAAK,EAAE;MACjB,IAAIC,OAAO,CAACjB,MAAM,CAACkB,OAAO,CAAC,EAAE;QAC3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;;IAG5B,CAAC,EAAEnB,KAAK,IAAIoB,KAAK,CAACpB,KAAK,CAACqB,OAAO,CAAC,CAAC;EAEnC;EAEAC,OAAO;IACL,IAAI,CAACZ,SAAS,GAAG,KAAK;IACtB,IAAI,CAACR,IAAI,CAACY,KAAK,EAAE;EACnB;EAGAS,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI;EACvB;EAEAC,UAAU;IACR,IAAI,CAACD,SAAS,GAAG,KAAK;EACxB;CACD;AAxDYlC,kBAAkB,eAL9BH,SAAS,CAAC;EACTuC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,EAQuCC,iBAAM,CAAC,UAAU,CAAC,IAP9CvC,kBAAkB,CAwD9B;SAxDYA,kBAAkB","names":["Component","Inject","Validators","FetchDataComponent","constructor","http","baseUrl","formBuilder","ngOnInit","get","subscribe","result","forecasts","error","console","form","group","claveDepartamento","required","descripcion","f","controls","onSubmit","submitted","invalid","post","value","reset","confirm","mensaje","window","location","reload","alert","message","onReset","openModal","modalOpen","closeModal","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\javie\\Documents\\Repos\\PracticaGN3\\PracticaGN3\\ClientApp\\src\\app\\departamento\\fetch-data.component.ts"],"sourcesContent":["import { Component, Inject,OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { style } from '@angular/animations';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html',\r\n  styleUrls: ['../../assets/modal.css'],\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n\r\n  public forecasts: WeatherForecast[] = [];\r\n  submitted = false;\r\n  campo: string = '';\r\n  form: FormGroup;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get<WeatherForecast[]>(this.baseUrl + 'api/departamento').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n\r\n    this.form = this.formBuilder.group(\r\n      {\r\n        claveDepartamento : ['', Validators.required],\r\n        descripcion: ['', Validators.required],\r\n      }\r\n    );\r\n  }\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.http.post<any>(this.baseUrl + 'api/departamento', this.form.value).subscribe(result => {\r\n\r\n      this.submitted = false;\r\n      this.form.reset();\r\n      if (confirm(result.mensaje)) {\r\n        window.location.reload();\r\n      }\r\n      \r\n    }, error => alert(error.message));\r\n\r\n  }\r\n\r\n  onReset(): void {\r\n    this.submitted = false;\r\n    this.form.reset();\r\n  }\r\n  modalOpen = false;\r\n\r\n  openModal(): void {\r\n    this.modalOpen = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.modalOpen = false;\r\n  }\r\n}\r\n\r\n\r\n\r\ninterface WeatherForecast {\r\n  claveDepartamento: number;\r\n  descripcion: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}